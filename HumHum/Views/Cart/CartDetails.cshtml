@model CustomerCartDto

@{
	ViewData["Title"] = "CartDetails";
	Layout = "~/Views/Shared/_AuthView.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<style>
	.cart-container {
		background-color: #fff;
		border-radius: 12px;
		box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
		padding: 30px;
	}

	.cart-title {
		color: #ffb411;
		font-weight: 700;
		font-size: 2rem;
		margin-bottom: 20px;
	}

	.cart-img {
		max-width: 80px;
		height: auto;
		border-radius: 8px;
	}

	.cart-table th {
		background-color: #f8f9fa;
		font-weight: 600;
	}

	.cart-table td, .cart-table th {
		vertical-align: middle;
	}

	.btn-danger {
		background-color: #B12704;
		border-color: #B12704;
	}

	.btn-danger:hover {
		background-color: #a22003;
		border-color: #a22003;
	}

	.input-spinner .btn {
		background-color: #ffb411;
		border: 1px solid #ffb411;
		color: #000;
	}

	#totalPrice {
		font-size: 1.2rem;
		font-weight: bold;
		color: #111;
	}

.btn-warning {
		background-color: #ffb411;
		border-color: #ffb411;
}

.btn-warning:hover {
	background-color: #ffb411;
	border-color: #ffb411;
}

</style>

<div class="container cart-container mt-5">

	<div class="d-flex justify-content-between">
		<h1 class="cart-title">Your Shopping Cart</h1>
		<div id="totalPrice">Total price = @ViewBag.TotalPrice</div>
	</div>

	<table class="table cart-table">
		<thead>
		<tr>
			<th>@Html.DisplayNameFor(model => model.Id)</th>
			<th>Product Name</th>
			<th>Image</th>
			<th>Unit Price</th>
			<th>Category</th>
			<th>Restaurant</th>
			<th class="text-center">Quantity</th>
			<th>&nbsp;</th>
		</tr>
		</thead>
		<tbody>
		@foreach (var item in Model.Items)
		{
			<tr id="row@(@item.Id)">
				<td>@Html.DisplayFor(modelItem => item.Id)</td>
				<td>@Html.DisplayFor(modelItem => item.ProductName)</td>
				<td>
					<img src="@item?.ImageUrl" class="cart-img" alt="@item?.ProductName"/>
				</td>
				<td>@Html.DisplayFor(modelItem => item.Price)</td>
				@* <td id="@item.Id">@Html.DisplayFor(modelItem => item.Quantity)</td> *@
				<td>@Html.DisplayFor(modelItem => item.Category)</td>
				<td>@Html.DisplayFor(modelItem => item.Restaurant)</td>
				<td>

					<div class="d-flex justify-content-center align-items-center gx-2">
						<div class="input-group input-spinner">
							<button class="btn minusOne" data-product-id="@item.Id" data-quantity="@item.Quantity">
								<svg t="1585835162360" class="icon" viewBox="0 0 1025 1024" xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor">
									<path d="M973.154 563.218 51.222 563.218c-28.275 0-51.222-22.946-51.222-51.214 0-28.276 22.946-51.222 51.222-51.222L973.154 460.782c28.33 0 51.222 22.946 51.222 51.222C1024.375 540.272 1001.484 563.218 973.154 563.218L973.154 563.218z"></path>
								</svg>
							</button>
							<input id="in@(@item.Id)" type="text" readonly value="@item.Quantity" class="form-control text-center">
							<button class="btn plus plusOne" data-product-id="@item.Id" data-quantity="@item.Quantity">
								<svg t="1585835178245" class="icon" fill="currentColor" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="14" height="14">
									<path d="M970.745 459.367 566.614 459.367 566.614 55.251C566.614 25.842 542.771 2 513.361 2c-29.411 0-53.253 23.841-53.253 53.251l0 404.116L55.975 459.367c-29.411 0-53.253 23.841-53.253 53.25 0 29.41 23.842 53.253 53.253 53.253l404.133 0 0 404.115c0 29.407 23.842 53.249 53.253 53.249 29.41 0 53.253-23.842 53.253-53.249L566.614 565.87l404.131 0c29.413 0 53.255-23.843 53.255-53.253C1024 483.208 1000.158 459.367 970.745 459.367z"></path>
								</svg>
							</button>
						</div>
						<button class="delete btn btn-outline-danger m-3" data-product-id="@item.Id">
							<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
								<path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>
								<path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>
							</svg>
						</button>
					</div>
				</td>
			</tr>
		}
		<tr>
			<td colspan="8" class="text-start">
				@Html.ActionLink("Proceed to Checkout", "Edit", "Order", new { id = Model.Id }, new { @class = "btn btn-warning px-4 py-2" })
			</td>
		</tr>
		</tbody>
	</table>
</div>

@section Scripts {
	@* <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> *@
	<script>
		$(document).ready(function () {
			$('.plusOne').click(function () {
				var productId = $(this).data('product-id');
				$.ajax({
					url: '@Url.Action("AddOne", "Cart")',
					type: 'POST',
					data: { id: productId },
					success: function (response) {
						if (response.success) {
							// alert(response.message);
							$("#" + productId).html(`${response.quantity}`);
							$("#totalPrice").html(`Total price = ${(response.total).toFixed(2)}`)
							$("#in" + productId).val(response.quantity);
						}
					},
					error: function () {
						alert('An error occurred while increasing the product in the cart.');
					}
				});
			});

			$('.minusOne').click(function () {
				var productId = $(this).data('product-id');

				let value = parseInt($("#spanCount").html());

				$.ajax({
					url: '@Url.Action("DecreaseOne", "Cart")',
					type: 'POST',
					data: { id: productId },
					success: function (response) {
						if (response.success) {
							// alert(response.message);
							if (response.quantity >= 1) {
								$("#" + productId).html(`${response.quantity}`);
								$("#in" + productId).val(response.quantity);
							} else {
								$("#row" + productId).remove();

								$("#spanCount").html(`${value - 1}`); //To decrease the counter beside the cart
							}
							$("#totalPrice").html(`Total price = ${(response.total).toFixed(2)}`)
						}
					},
					error: function () {
						alert('An error occurred while increasing the product in the cart.');
					}
				});
			});

			$('.delete').click(function () {
				var productId = $(this).data('product-id');

				let value = parseInt($("#spanCount").html());


				$.ajax({
					url: '@Url.Action("DeleteProduct", "Cart")',
					type: 'POST',
					data: { id: productId },
					success: function (response) {
						if (response.success) {
							// alert(response.message);
							if (response.isDeleted) {
								$("#row" + productId).remove();

								$("#spanCount").html(`${value - 1}`); //To decrease the counter beside the cart
							}
							$("#totalPrice").html(`Total price = ${(response.total).toFixed(2)}`)
						}
					},
					error: function () {
						alert('An error occurred while deleting the product in the cart.');
					}
				});
			});
		});
	</script>
}
